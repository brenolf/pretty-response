{
  "esnext": true,
  "maximumLineLength": 80,
  "validateIndentation": 2,
  "requireCurlyBraces": ["if", "else", "for", "while", "do", "try", "catch"],
  "validateQuoteMarks": true,
  "disallowKeywordsOnNewLine": ["else"],
  "requireSpaceAfterKeywords": true,
  "requireSpaceBeforeKeywords": ["else", "while", "catch"],
  "requirePaddingNewlinesBeforeKeywords": ["do", "for", "if", "switch", "case", "try", "void","return", "function"],
  "disallowKeywords": ["with"],
  "disallowMultipleLineBreaks": true,
  "disallowEmptyBlocks": true,
  "disallowFunctionDeclarations": true,
  "disallowMultipleLineBreaks": true,
  "disallowMultipleSpaces": true,
  "disallowNewlineBeforeBlockStatements": true,
  "disallowImplicitTypeConversion": ["numeric", "boolean", "binary", "string"],
  "disallowOperatorBeforeLineBreak": ["+", ".", "/", "*"],
  "disallowPaddingNewlinesInBlocks": true,
  "disallowSpaceAfterObjectKeys": true,
  "disallowSpaceAfterPrefixUnaryOperators": true,
  "disallowSpaceBeforePostfixUnaryOperators": true,
  "disallowSpacesInCallExpression": true,
  "disallowSpacesInsideParentheses": true,
  "disallowTrailingComma": true,
  "disallowTrailingWhitespace": "ignoreEmptyLines",
  "disallowYodaConditions": true,
  "requireBlocksOnNewline": true,
  "requireCapitalizedConstructors": true,
  "requireDotNotation": "except_snake_case",
  "requireLineBreakAfterVariableAssignment": true,
  "requireLineFeedAtFileEnd": true,
  "requirePaddingNewLineAfterVariableDeclaration": true,
  "requirePaddingNewLinesAfterBlocks": true,
  "requireParenthesesAroundIIFE": true,
  "disallowSemicolons": true,
  "requireSpaceAfterBinaryOperators": true,
  "requireSpaceBeforeBinaryOperators": true,
  "requireSpaceAfterLineComment": true,
  "requireSpaceBeforeBlockStatements": true,
  "requireSpaceBeforeObjectValues": true,
  "requireSpaceBetweenArguments": true,
  "requireSpacesInForStatement": true,
  "safeContextKeyword": ["that"],
  "validateParameterSeparator": ", ",
  "requireSpacesInAnonymousFunctionExpression": {
    "beforeOpeningRoundBrace": true,
    "beforeOpeningCurlyBrace": true
  },
  "requireSpacesInConditionalExpression": {
    "afterTest": true,
    "beforeConsequent": true,
    "afterConsequent": true,
    "beforeAlternate": true
  },
  "requireSpacesInFunctionExpression": {
    "beforeOpeningRoundBrace": true,
    "beforeOpeningCurlyBrace": true
  },
  "requireSpacesInNamedFunctionExpression": {
    "beforeOpeningRoundBrace": true,
    "beforeOpeningCurlyBrace": true
  }
}
